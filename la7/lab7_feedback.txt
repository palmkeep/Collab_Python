Jag har kommenterat #TODO i er fil på de områden som bör kompletteras och markerat med en siffra för att koppla med siffran i detta dokument. Behåll kompletteringskommentarerna s.a. jag vet var jag ska kolla när ni lämnar in kompletteringen. 

Vad som var bra:
- Alla funktioner som hör till calendar.py se jättebra ut, så jag har flyttat dem till "ok"-mappen. 
- I många fall hanterar ni abstraktionen väl.
- Det är ett stort plus att ni kommenterat och angett typspecifikationer.

Vad som bör kompletteras:
7A:
- Komplettering 1: Abstraktionsbrott. Ni får inte använda max- och min-funktionerna. I 'calendar_ADT.py' finns det andra funktioner som kan få ut tidigaste och senaste tiden.
- Komplettering 2: Se till att 'length_of_span' inte bryter abstraktionen.
7B:
- Komplettering 3: Abstraktionsbrott. Jag skulle avråda från att använda generella for-loopar och att använda 'strip_tag'. Vilka andra funktioner har ni som plockar ut 'time_span' utan att bryta mot abstraktionen? Ni ska inte heller behöver ta ut start- och sluttiden och skriva ut det. Vilka andra 'print'-funktioner kan fixa det? "time_spans" innehåller flera "time_span". Hur printar den befintliga koden ett "time_span"? Denna borde dessutom ligga i 'output.py' eftersom att det är där all form av utskrift används. Ett tips är att kolla på hur 'output.py' fungerar.
7C:
- Komplettering 4: 'get_appointment_at' kan returnera None, vilket inte är en snygg lösning på uppgiften. Ni ska heller inte behöva använda er av den funktionen, utan jag rekommenderar att utnyttja 'remove_appointment' hela vägen ut. Det sker lite abstraktionsbrott när ni utför jämförelser som 'if snipped_day[1] == []' och 'if snipped_month[1] == []'. Ni ska inte behöva använda er av 'snipped_month' och 'snipped_day'. Använd er av 'insert_calendar_month' med 'remove_appointment' utan de nämnda if-satserna. 'remove_appointment' kommer att fixa resten. 
7D:
- Komplettering 5: Eftersom att 'free_spans' egentligen borde ligga i 'booking.py' sker det abstraktionsbrott i funktionen. Ni ska därmed inte använda er av 'attach_tag' eller 'strip_tag'. Endast primitiver och initialisering, getters och bekräftelser av 'compound types' är tillåtna till att använda 'tag'-funktionerna. Att använda sådana funktioner på högre nivåer gör det svårt för mig att tolka vad 'start_time(strip_tag(time_spans)[0])' och 'end_time(strip_tag(time_spans)[-1])' är för något. Finns det något annat sätt att få tag på dessa utan att direktindexera en strip_tag?
- Komplettering 6: Jag skulle gärna vilja se lite fler testfall. Kanske 4-6 lämpliga fall som kolar olika "situationer". Kommentera sedan vilka "situationer" ni kollar.
